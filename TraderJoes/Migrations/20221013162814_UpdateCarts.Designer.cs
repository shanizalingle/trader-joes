// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TraderJoes.Models;

namespace TraderJoes.Migrations
{
    [DbContext(typeof(TraderJoesContext))]
    [Migration("20221013162814_UpdateCarts")]
    partial class UpdateCarts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TraderJoes.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("CartId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("TraderJoes.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("TraderJoes.Models.DepartmentProduct", b =>
                {
                    b.Property<int>("DepartmentProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentProductId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ProductId");

                    b.ToTable("DepartmentProduct");
                });

            modelBuilder.Entity("TraderJoes.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("TraderJoes.Models.ProductCart", b =>
                {
                    b.Property<int>("ProductCartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ProductCartId");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCart");
                });

            modelBuilder.Entity("TraderJoes.Models.DepartmentProduct", b =>
                {
                    b.HasOne("TraderJoes.Models.Department", "Department")
                        .WithMany("JoinEntities")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TraderJoes.Models.Product", "Product")
                        .WithMany("JoinEntities")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TraderJoes.Models.ProductCart", b =>
                {
                    b.HasOne("TraderJoes.Models.Cart", "Cart")
                        .WithMany("JoinProdCart")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TraderJoes.Models.Product", "Product")
                        .WithMany("JoinProdCart")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TraderJoes.Models.Cart", b =>
                {
                    b.Navigation("JoinProdCart");
                });

            modelBuilder.Entity("TraderJoes.Models.Department", b =>
                {
                    b.Navigation("JoinEntities");
                });

            modelBuilder.Entity("TraderJoes.Models.Product", b =>
                {
                    b.Navigation("JoinEntities");

                    b.Navigation("JoinProdCart");
                });
#pragma warning restore 612, 618
        }
    }
}
